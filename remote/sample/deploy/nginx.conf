server {
    listen 80;
    server_name _;

    root /usr/share/nginx/html;
    index index.html;

    # Gzip圧縮の設定
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/x-javascript
        application/xml
        application/xml+rss
        application/json;

    # セキュリティヘッダーの設定
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # CORS
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;

    # プリフライトリクエストの処理
    if ($request_method = 'OPTIONS') {
        return 204;
    }

    # フォワード設定
    location /${APP_NAME}/ {
        alias /usr/share/nginx/html/${APP_NAME}/;
        try_files $uri $uri/ /${APP_NAME}/index.html;

        # キャッシュする対象の指定
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Access-Control-Allow-Origin "*" always;
        }

        # remoteEntry.js は、キャッシュしない
        location ~* /assets/remoteEntry\.js$ {
            expires -1;
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
            add_header Access-Control-Allow-Origin "*" always;
        }
    }

    # ヘルスチェック用のエンドポイント
    location /health {
        access_log off;
        add_header Content-Type text/plain;
        return 200 "healthy\n";
    }

    # レディネスチェック用のエンドポイント
    location /ready {
        access_log off;
        add_header Content-Type text/plain;
        return 200 "ready\n";
    }

    # エラーページの設定
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
}
